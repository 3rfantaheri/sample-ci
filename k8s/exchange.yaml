---
apiVersion: v1
kind: Namespace
metadata:
  name: exchange
  labels:
    app: exchange
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exchange-web
  namespace: exchange
  labels:
    app: exchange
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: exchange
      tier: web
  template:
    metadata:
      labels:
        app: exchange
        tier: web
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: web
          image: __IMAGE__
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
          env:
            - name: DEBUG
              value: "0"
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: exchange-db
                  key: host
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: exchange-db
                  key: port
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: exchange-db
                  key: name
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: exchange-db
                  key: user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: exchange-db
                  key: password
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: exchange-web
  namespace: exchange
  labels:
    app: exchange
spec:
  type: ClusterIP
  selector:
    app: exchange
    tier: web
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: exchange-web
  namespace: exchange
  labels:
    app: exchange
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: exchange-web
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
---
apiVersion: v1
kind: Secret
metadata:
  name: exchange-db
  namespace: exchange
type: Opaque
stringData:
  host: postgres.exchange
  port: "5432"
  name: exchange
  user: exchange
  password: change-me
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: exchange-web
  namespace: exchange
  labels:
    app: exchange
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  rules:
    - host: exchange.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: exchange-web
                port:
                  number: 80

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: exchange-web
  namespace: exchange
  labels:
    app: exchange
spec:
  selector:
    matchLabels:
      app: exchange
      tier: web
  namespaceSelector:
    matchNames:
      - exchange
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: exchange-web
  namespace: exchange
  labels:
    app: exchange
spec:
  groups:
    - name: exchange-deployment.rules
      rules:
        - alert: ExchangeDeploymentUnavailable
          expr: kube_deployment_status_replicas_available{namespace="exchange", deployment="exchange-web"} < 2
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: Exchange deployment below expected availability
            description: Available replicas for exchange-web is below 2 for more than 5 minutes.
        - alert: ExchangeHighCPU
          expr: sum(rate(container_cpu_usage_seconds_total{namespace="exchange", pod=~"exchange-web-.*", container!="POD"}[5m])) > 0.5
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: High CPU usage on exchange-web
            description: Aggregate CPU usage over 0.5 cores for 10 minutes.
        - alert: ExchangeHighMemory
          expr: sum(container_memory_working_set_bytes{namespace="exchange", pod=~"exchange-web-.*", container!="POD"}) / 1024 / 1024 > 400
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: High memory usage on exchange-web
            description: Memory working set exceeded 400Mi for 10 minutes.
        - alert: ExchangeNoMetrics
          expr: absent(up{namespace="exchange", service="exchange-web"})
          for: 15m
          labels:
            severity: info
          annotations:
            summary: No metrics scraped for exchange-web
            description: ServiceMonitor present but Prometheus has not scraped metrics for 15 minutes.
